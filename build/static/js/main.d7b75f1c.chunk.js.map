{"version":3,"sources":["Component/Constant.jsx","Store/Actions/authActions.js","Pages/Auth.jsx","Pages/Instructions.jsx","Pages/Register.jsx","Pages/Pagination.jsx","Pages/viewParticipants.jsx","Routes/routes.jsx","Config/fbConfig.js","Component/Loading/index.js","Store/Reducers/authReducer.js","Store/Reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["TextField","name","style","id","className","label","placeholder","onChange","value","required","type","errors","errorstatus","htmlFor","marginTop","color","SelectField","data","map","e","key","register","newUser","dispatch","getState","getFirebase","getFirestore","firebase","firestore","auth","createUserWithEmailAndPassword","email","password","then","memb","collection","doc","user","uid","set","member","gender","status","phone","momo","pensa","institution","expectation","dateRegistered","Date","templateParams","from_name","to_name","to_email","reply_to","emailjs","result","console","log","text","error","sendEmail","catch","err","Authenticate","props","handleChange","target","setState","handleSubmit","preventDefault","state","signIn","history","push","this","to","onSubmit","width","Component","withRouter","connect","ownProps","creds","credentials","signInWithEmailAndPassword","Instructions","Register","IndexAlertPage","Children","dismiss","onClick","handleClose","show","resetForm","handleShow","_loading","checked","Object","assign","isvalid","invalid","isValid","trim","loading","document","getElementById","hidden","setTimeout","keys","length","validated","Submit","onSuccess","reference","onClose","network","registered","modal","authError","config","getTime","firstname","split","shift","amount","publicKey","currency","PaystackHookExample","initializePayment","usePaystackPayment","margin","size","global","Modal","aria-labelledby","onHide","centered","Body","loaded","success","Button","variant","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","lnk","i","Math","ceil","circle","aria-label","aria-hidden","number","active","ViewParticipants","Logout","signOut","currentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","Total","float","pageNumber","compose","ordered","firestoreConnect","orderBy","Routes","exact","path","component","viewParticipants","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","Loading","redirect","clearTimeout","initState","authReducer","action","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","rrfConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","AuthIsLoaded","children","useSelector","isLoaded","App","createFirestoreInstance","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7b75f1c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const TextField = ({\r\n  name,\r\n  style,\r\n  id,\r\n  className,\r\n  label,\r\n  placeholder,\r\n  onChange,\r\n  value,\r\n  required,\r\n  type,\r\n  errorstatus,\r\n  errors,\r\n}) => (\r\n  <div>\r\n    <label htmlFor={name} style={{ marginTop: \"10px\" }}>\r\n      <b>\r\n        {label}\r\n        {required ? <sup style={{ color: \"red\" }}>*</sup> : \"\"}\r\n      </b>\r\n    </label>\r\n    <input\r\n      type={type ? type : \"text\"}\r\n      name={name}\r\n      id={id}\r\n      placeholder={placeholder}\r\n      className={`form-control ${className}`}\r\n      style={style}\r\n      onChange={onChange}\r\n      value={value}\r\n      // required={required}\r\n    />\r\n    {!{ errorstatus } ? (\r\n      <span></span>\r\n    ) : (\r\n      <span style={{ color: \"red\" }}>{errors}</span>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport const SelectField = ({\r\n  name,\r\n  style,\r\n  id,\r\n  className,\r\n  label,\r\n  placeholder,\r\n  onChange,\r\n  value,\r\n  data,\r\n  required,\r\n  errorstatus,\r\n  errors,\r\n}) => (\r\n  <div>\r\n    <label htmlFor={name} style={{ marginTop: \"10px\" }}>\r\n      <b>\r\n        {label}\r\n        {required ? <sup style={{ color: \"red\" }}>*</sup> : \"\"}\r\n      </b>\r\n    </label>\r\n    <select\r\n      name={name}\r\n      id={id}\r\n      className={`form-control ${className}`}\r\n      value={value}\r\n      style={style}\r\n      onChange={onChange}\r\n      // required={required}\r\n    >\r\n      {data ? (\r\n        data && data.map((e) => <option key={e}>{e}</option>)\r\n      ) : (\r\n        <>\r\n          <option>Select Gender</option>\r\n          <option>Male</option>\r\n          <option>Female</option>\r\n        </>\r\n      )}\r\n    </select>\r\n    {!{ errorstatus } ? (\r\n      <span></span>\r\n    ) : (\r\n      <span style={{ color: \"red\" }}>{errors}</span>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport const ErrorHandling = ({ errors, errorstatus }) => {\r\n  return !{ errorstatus } ? (\r\n    <span></span>\r\n  ) : (\r\n    <span style={{ color: \"red\" }}>{errors}</span>\r\n  );\r\n};\r\n","import * as emailjs from \"emailjs-com\";\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"LOGIN_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            });\r\n    };\r\n};\r\nconst sendEmail = (member) => {\r\n    let templateParams = {\r\n        from_name: \"noReply@pensaumat\",\r\n        to_name: member.name,\r\n        to_email: member.email,\r\n        reply_to: \"pensaumat@gmail.com\",\r\n        // subject: \"subject\",\r\n        // message_html: \"message\",\r\n    };\r\n    emailjs\r\n        .send(\r\n            \"gmail\",\r\n            \"template_qYHocBcQ\",\r\n            templateParams,\r\n            \"user_qBb9Yd4R48fB4y4xPD7t1\"\r\n        )\r\n        .then(\r\n            (result) => {\r\n                console.log(result.text);\r\n            },\r\n            (error) => {\r\n                console.log(error.text);\r\n            }\r\n        );\r\n};\r\n\r\nexport const register = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((memb) => {\r\n                return firestore.collection(\"member\").doc(memb.user.uid).set({\r\n                    name: newUser.name,\r\n                    member: newUser.member,\r\n                    gender: newUser.gender,\r\n                    status: newUser.status,\r\n                    phone: newUser.momo,\r\n                    email: newUser.email,\r\n                    pensa: newUser.pensa,\r\n                    institution: newUser.institution,\r\n                    expectation: newUser.expectation,\r\n                    dateRegistered: new Date(),\r\n                });\r\n            })\r\n            .then(() => sendEmail(newUser))\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\n// const credentials = {\r\n//     userSecret: \"82fc4d50e0314a4cbd57ae64ce1b70f5\",\r\n//     userId: \"5ededbd1-cc21-4ada-ac11-0c0e481800ad\",\r\n//     primaryKey: \"6a31f6cd066c47eaa3414ad72a0e5526\",\r\n// };\r\n\r\n// export const signUpEC = (newUser) => {\r\n//     return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n//         const firebase = getFirebase();\r\n//         const firestore = getFirestore();\r\n\r\n//         firebase\r\n//             .auth()\r\n//             .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n\r\n//         .then((resp) => {\r\n//                 return firestore.collection(\"ec\").doc(resp.user.uid).set({\r\n//                     firstName: newUser.firstname,\r\n//                     lastName: newUser.lastname,\r\n//                     status: newUser.status,\r\n//                     image: newUser.url,\r\n//                 });\r\n//             })\r\n//             .then(() => {\r\n//                 dispatch({ type: \"EC_SIGNUP_SUCCESS\" });\r\n//             })\r\n//             .catch((err) => {\r\n//                 dispatch({ type: \"EC_SIGNUP_ERROR\", err });\r\n//             });\r\n//     };\r\n// };","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport { TextField } from \"../Component/Constant\";\r\nimport { signIn } from \"../Store/Actions/authActions\";\r\n\r\nclass Authenticate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    var target = e.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.email === \"admin@gmail.com\") {\r\n      this.props.signIn(this.state);\r\n      if (this.props.auth.uid)\r\n        return (\r\n          //   console.log(\"registerd\")\r\n          this.props.history.push(\"/participant\")\r\n        );\r\n    }\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/participant\" />;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"container form-group\" style={{ marginTop: \"200px\" }}>\r\n            <TextField\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              placeholder=\"e.g example@gmail.com\"\r\n              className=\"form-control\"\r\n              label=\"Email Address\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              label=\"Password\"\r\n              value={this.state.password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"********************\"\r\n              className=\"form-control\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"container\"\r\n            style={{ marginTop: \"20px\", width: \"50%\" }}\r\n          >\r\n            <button type=\"submit\" className=\"btn btn-success form-control\">\r\n              Sign In\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(Authenticate)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBAlert } from \"mdbreact\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Instructions extends Component {\r\n  Register = () => {\r\n    this.props.history.push(\"/register\");\r\n  };\r\n  render() {\r\n    const IndexAlertPage = ({ Children, color, dismiss }) => {\r\n      return (\r\n        <MDBContainer>\r\n          <MDBAlert color={color} dismiss={dismiss}>\r\n            {Children}\r\n          </MDBAlert>\r\n        </MDBContainer>\r\n      );\r\n    };\r\n    return (\r\n      <div className=\"container form-group\">\r\n        <IndexAlertPage\r\n          color=\"warning\"\r\n          Children={\r\n            <strong className=\"text-center\">Registration Instructions</strong>\r\n          }\r\n        />\r\n        <IndexAlertPage\r\n          color=\"warning\"\r\n          Children={\r\n            <div>\r\n              <h6>\r\n                Enter your active email since conference links will be sent to\r\n                you via email\r\n              </h6>\r\n\r\n              <h6>\r\n                Check your input before you register by clicking on the{\" \"}\r\n                <b>Check Input</b> button\r\n              </h6>\r\n\r\n              <h6>\r\n                Complete your registration by clicking on the <b>Register</b>{\" \"}\r\n                button\r\n              </h6>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <IndexAlertPage\r\n          color=\"warning\"\r\n          Children={\r\n            <div>\r\n              <h5>PAYMENT OPTION</h5>\r\n              <h6>\r\n                <label>\r\n                  {\" \"}\r\n                  1. When on our checkout form, click the Mobile Money option\r\n                </label>\r\n                <label>2.Input your mobile money number</label>\r\n                <label> 3.Choose your provider </label>\r\n                <label>4.Click on Confirm </label>\r\n              </h6>\r\n\r\n              <div>\r\n                <h5>\r\n                  <b>Important to Note</b>\r\n                </h5>\r\n                <label>\r\n                  For <b>Vodafone</b> users, after you confirm your mobile money\r\n                  number and provider, you will have to dial *110# on your\r\n                  mobile phone, select option 4: Make Payments and select option\r\n                  4: Generate Voucher and enter your pin to complete the\r\n                  request. You will receive a text message containing your\r\n                  voucher code after which you will come back to the checkout\r\n                  form to click on 'I have received my voucher code.' Input the\r\n                  voucher code to authorise the payment and complete the\r\n                  transaction.\r\n                </label>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <IndexAlertPage\r\n          color=\"success\"\r\n          Children={\r\n            <div>\r\n              <h5>\r\n                <b className=\"text-center\">\r\n                  You will be required to pay a token to support the conference\r\n                  during the registration\r\n                </b>\r\n              </h5>\r\n              <h6>\r\n                <b>1. Pre-Tetiary 2GHS</b>\r\n              </h6>\r\n              <h6>\r\n                <b>2. Tetiary 5GHS</b>\r\n              </h6>\r\n              <h6>\r\n                <b>3. Alumni 10GHS</b>\r\n              </h6>\r\n            </div>\r\n          }\r\n        />\r\n        <div className=\"container\" style={{ width: \"50%\" }}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success form-control container\"\r\n            onClick={this.Register}\r\n          >\r\n            Finish\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Instructions);\r\n","import React, { Component } from \"react\";\r\nimport { register } from \"../Store/Actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextField, SelectField } from \"../Component/Constant\";\r\n// import img from \"../assets/IMG-20201007-WA0008.jpg\";\r\nimport \"./index.css\";\r\nimport RiseLoader from \"react-spinners/CircleLoader\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { usePaystackPayment } from \"react-paystack\";\r\n// import { MDBContainer, MDBAlert } from \"mdbreact\";\r\n\r\n/**\r\n * name\r\n * school\r\n * member or not\r\n * pre-tertiary,tertiary or alumni\r\n * email\r\n * active whatsApp\r\n * gender\r\n *\r\n * expectation\r\n */\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      gender: \"\",\r\n      status: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      member: \"\",\r\n      institution: \"\",\r\n      password: \"123456789\",\r\n      expectation: \"\",\r\n      momo: \"\",\r\n      pensa: \"\",\r\n      network: \"\",\r\n      errors: {},\r\n      error: true,\r\n      loading: false,\r\n      isvalid: false,\r\n      invalid: \"Your input data is not valid\",\r\n      registered: false,\r\n      show: false,\r\n      _loading: false,\r\n      validated: false,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    // this.setState({ name: \"\" });\r\n    this.resetForm();\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true, _loading: false });\r\n  };\r\n  resetForm() {\r\n    this.setState({\r\n      // email: \"\",\r\n\r\n      modal: false,\r\n    });\r\n  }\r\n  handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    if (!!this.state.errors[target.name]) {\r\n      let errors = Object.assign({}, this.state.errors);\r\n      delete errors[target.name];\r\n      this.setState({\r\n        [name]: value,\r\n        errors,\r\n      });\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n    this.setState({\r\n      isvalid: false,\r\n      invalid: \"Check the validity of your input\",\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let errors = {};\r\n    // Validating\r\n    if (this.state.name.trim() === \"\") {\r\n      errors.name = \"Full name is required\";\r\n    }\r\n    if (\r\n      (this.state.gender.trim() === \"Select Gender\") |\r\n      (this.state.gender.trim() === \"\")\r\n    ) {\r\n      errors.gender = \"Select Gender\";\r\n    }\r\n    if (\r\n      (this.state.status.trim() === \"Select Status\") |\r\n      (this.state.status.trim() === \"\")\r\n    ) {\r\n      errors.status = \"Select Status\";\r\n    }\r\n\r\n    if (\r\n      (this.state.member.trim() === \"Select Status\") |\r\n      (this.state.member.trim() === \"\")\r\n    ) {\r\n      errors.member = \"Select COP Status\";\r\n    }\r\n\r\n    if (\r\n      (this.state.pensa.trim() === \"Select Status\") |\r\n      (this.state.pensa.trim() === \"\")\r\n    ) {\r\n      errors.pensa = \"Select PENSA Membership Status\";\r\n    }\r\n\r\n    if (\r\n      this.state.institution.trim() === \"\" &&\r\n      this.state.status !== \"Alumni\"\r\n    ) {\r\n      errors.institution = \"Enter Institution\";\r\n    }\r\n\r\n    if (this.state.email.trim() === \"\") {\r\n      errors.email = \"Enter Email\";\r\n    }\r\n    if (this.state.momo.trim() === \"\") {\r\n      errors.momo = \"Enter your phone number\";\r\n    }\r\n    if (this.state.expectation.trim() === \"\") {\r\n      errors.expectation = \"Enter your expectation for the conference\";\r\n    }\r\n\r\n    // Before Loading\r\n    let isValid;\r\n    this.setState({ loading: true });\r\n\r\n    // After Loading\r\n    document.getElementById(\"spinning\").hidden = false;\r\n    document.getElementById(\"form\").hidden = true;\r\n\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n      if (!this.state.loading) {\r\n        this.setState({ errors });\r\n        isValid = Object.keys(errors).length === 0;\r\n        this.setState({\r\n          isvalid: isValid,\r\n        });\r\n        this.setState({\r\n          validated: true,\r\n        });\r\n        document.getElementById(\"spinning\").hidden = true;\r\n        document.getElementById(\"form\").hidden = false;\r\n\r\n        // if (isValid) {\r\n        //   console.log(\"IT IS VALID\");\r\n        // }\r\n        // if (isValid) {\r\n        //   this.props.register(this.state);\r\n        // }\r\n        // // if (this.props.success) {\r\n        // this.handleShow();\r\n        // // }\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  Submit = (isValid) => {\r\n    if (this.state.isvalid) {\r\n      this.props.register(this.state);\r\n      this.handleShow();\r\n    }\r\n  };\r\n\r\n  // you can call this function anything\r\n  onSuccess = (reference) => {\r\n    // Implementation for whatever you want to do with reference and after success call.\r\n    this.Submit();\r\n    console.log(reference);\r\n  };\r\n\r\n  // you can call this function anything\r\n  onClose = () => {\r\n    // implementation for  whatever you want to do when the Paystack dialog closed.\r\n    // this.handleSubmit();\r\n    // console.log(\"closed\");\r\n  };\r\n\r\n  render() {\r\n    const { authError } = this.props;\r\n\r\n    const config = {\r\n      reference: new Date().getTime(),\r\n      email: this.state.email,\r\n      firstname: this.state.name.split(\" \").shift(),\r\n      amount:\r\n        this.state.status === \"Pre-Tertiary\"\r\n          ? 200\r\n          : this.state.status === \"Tertiary\"\r\n          ? 500\r\n          : 1000,\r\n      publicKey: \"pk_live_195c388bc88cfe71e44120fe6b1c5c74e6ba8cce\",\r\n      currency: \"GHS\",\r\n    };\r\n\r\n    const PaystackHookExample = () => {\r\n      const initializePayment = usePaystackPayment(config);\r\n      return (\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success form-control \"\r\n            onClick={() => {\r\n              initializePayment(this.onSuccess, this.onClose);\r\n            }}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"Loading-header\" id=\"spinning\" hidden>\r\n          <RiseLoader margin={1} size={100} color={\"#fff\"} loading={true} />{\" \"}\r\n        </div>{\" \"}\r\n        <div className=\"my-container\">\r\n          <form onSubmit={this.handleSubmit} className=\"form-group\" id=\"form\">\r\n            <div className=\"container\">\r\n              {this.state.validated ? (\r\n                this.state.isvalid ? (\r\n                  <h4 className=\"btn-success mx-auto text-center\">\r\n                    Your input data is Valid\r\n                  </h4>\r\n                ) : (\r\n                  <h4 className=\"btn-danger  mx-auto text-center\">\r\n                    Your input data is invalid\r\n                  </h4>\r\n                )\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            {!!this.state.errors.global && (\r\n              <div className=\"ui negative message\">\r\n                <p>{this.state.errors.global}</p>\r\n              </div>\r\n            )}\r\n\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"name\"\r\n              label=\"Full Name\"\r\n              className=\"form-control\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.name}\r\n            />\r\n\r\n            <SelectField\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n              required\r\n              value={this.state.gender}\r\n              onChange={this.handleChange}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.gender}\r\n            />\r\n\r\n            {/* <TextField\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              label=\"Lastname\"\r\n              className=\"form-control\"\r\n              value={this.state.lastname}\r\n              onChange={this.handleChange}\r\n              required\r\n            /> */}\r\n            <SelectField\r\n              label=\"Are you a COP member\"\r\n              name=\"member\"\r\n              required\r\n              value={this.state.member}\r\n              onChange={this.handleChange}\r\n              data={[\"Select Status\", \"Member\", \"Not Member\"]}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.member}\r\n            />\r\n            <SelectField\r\n              label=\"PENSA Membership Status\"\r\n              name=\"pensa\"\r\n              required\r\n              value={this.state.pensa}\r\n              onChange={this.handleChange}\r\n              data={[\"Select Status\", \"Member\", \"Not Member\"]}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.pensa}\r\n            />\r\n            <SelectField\r\n              label=\"Education Status\"\r\n              name=\"status\"\r\n              required\r\n              value={this.state.status}\r\n              onChange={this.handleChange}\r\n              data={[\"Select Status\", \"Pre-Tertiary\", \"Tertiary\", \"Alumni\"]}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.status}\r\n            />\r\n            {this.state.status === \"Pre-Tertiary\" ||\r\n            this.state.status === \"Tertiary\" ? (\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"institution\"\r\n                label=\"Institution\"\r\n                className=\"form-control\"\r\n                value={this.state.institution}\r\n                onChange={this.handleChange}\r\n                errorstatus={this.state.institution}\r\n                errors={this.state.errors.institution}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <TextField\r\n              type=\"textarea\"\r\n              name=\"expectation\"\r\n              label=\"What is your expectation after the conference\"\r\n              className=\"form-control\"\r\n              value={this.state.expectation}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.expectation}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              className=\"form-control\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.email}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"momo\"\r\n              label=\"Phone Number\"\r\n              className=\"form-control\"\r\n              value={this.state.momo}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.momo}\r\n            />\r\n\r\n            <div style={{ marginTop: \"20px\" }} className=\"container row\">\r\n              <div\r\n                className=\"col-lg-6 col-md-6 col-sm-6\"\r\n                style={{ marginTop: \"20px\" }}\r\n              >\r\n                <button type=\"submit\" className=\"btn btn-success form-control\">\r\n                  Check Input\r\n                </button>\r\n              </div>\r\n              <div\r\n                className=\"col-lg-6 col-md-6 col-sm-6\"\r\n                style={{ marginTop: \"20px\" }}\r\n              >\r\n                {this.state.validated && this.state.isvalid ? (\r\n                  <PaystackHookExample />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              size=\"md\"\r\n              aria-labelledby=\"contained-modal-title-vcenter\"\r\n              show={this.state.show}\r\n              onHide={this.handleClose}\r\n              centered\r\n            >\r\n              <Modal.Body className=\"contact_success_modal_body\">\r\n                {/* <Image\r\n                  className=\"contact_success_modal_img mx-auto text-center\"\r\n                  src=\"https://icon-library.net/images/success-icon/success-icon-5.jpg\"\r\n                  width=\"50%\"\r\n                /> */}\r\n                {this.props.loaded ? (\r\n                  <div className=\"text-center btn-danger\">\r\n                    <p>{authError}</p>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {this.props.success ? (\r\n                  <>\r\n                    {\" \"}\r\n                    <h5>\r\n                      Thank you{\" \"}\r\n                      <span>\r\n                        <strong>{this.state.name}</strong>!!\r\n                      </span>{\" \"}\r\n                      😇\r\n                    </h5>\r\n                    <h6>\r\n                      You have successfuly registered for the second edition of\r\n                      Eschatological conference\r\n                    </h6>\r\n                    <b>\r\n                      {\" \"}\r\n                      <h6>\r\n                        Check your email for the links to access the conference.\r\n                      </h6>\r\n                    </b>\r\n                    <br />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"outline-light\"\r\n                  size=\"lg\"\r\n                  onClick={this.handleClose}\r\n                  className=\"contact-email-text-btn btn-primary\"\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </form>\r\n          {/* <PaystackHookExample /> */}\r\n        </div>\r\n        {/* <img src={img} alt=\"bg\" /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n    success: state.auth.success,\r\n    loaded: state.auth.loaded,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    register: (creds) => dispatch(register(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React from \"react\";\r\nimport {\r\n  MDBPagination,\r\n  MDBPageItem,\r\n  MDBPageNav,\r\n  MDBCol,\r\n  MDBRow,\r\n} from \"mdbreact\";\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, lnk }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MDBRow className=\"mx-auto\">\r\n        <MDBCol>\r\n          <MDBPagination circle>\r\n            <MDBPageItem>\r\n              <MDBPageNav className=\"page-link\">\r\n                <span>First</span>\r\n              </MDBPageNav>\r\n            </MDBPageItem>\r\n\r\n            <MDBPageItem onClick={() => paginate(pageNumbers[0])}>\r\n              <MDBPageNav className=\"page-link\" aria-label=\"Previous\">\r\n                <span aria-hidden=\"true\">&laquo;</span>\r\n                <span className=\"sr-only\">Previous</span>\r\n              </MDBPageNav>\r\n            </MDBPageItem>\r\n            {pageNumbers.map((number) => (\r\n              <MDBPageItem active key={number}>\r\n                <MDBPageNav\r\n                  className=\"page-link\"\r\n                  onClick={() => paginate(number)}\r\n                >\r\n                  {number} <span className=\"sr-only\">(current)</span>\r\n                </MDBPageNav>\r\n              </MDBPageItem>\r\n            ))}\r\n            <MDBPageItem\r\n              onClick={() => paginate(pageNumbers[pageNumbers.length - 1])}\r\n            >\r\n              <MDBPageNav className=\"page-link\">&raquo;</MDBPageNav>\r\n            </MDBPageItem>\r\n\r\n            <MDBPageItem>\r\n              <MDBPageNav className=\"page-link\">Last</MDBPageNav>\r\n            </MDBPageItem>\r\n          </MDBPagination>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { signOut } from \"../Store/Actions/authActions\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass ViewParticipants extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      postsPerPage: 13,\r\n    };\r\n  }\r\n\r\n  Logout = () => {\r\n    if (this.props) {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n  render() {\r\n    const { member, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n    const indexOfLastPost = this.state.currentPage * this.state.postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\r\n\r\n    const paginate = (pageNumber) => this.setState({ currentPage: pageNumber });\r\n\r\n    const currentPosts =\r\n      member && member.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    let i = 1;\r\n\r\n    const Total = (\r\n      <div className=\"container-fluid mx-auto\">\r\n        <button type=\"button\" className=\"btn btn-primary\">\r\n          Total Participants{\" \"}\r\n          <span className=\"badge badge-success\">{member && member.length}</span>\r\n        </button>\r\n      </div>\r\n    );\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          style={{ float: \"right\" }}\r\n          onClick={this.Logout}\r\n        >\r\n          Logout\r\n        </button>\r\n        {Total}\r\n        <table className=\"table table-striped table-bordered table-sm\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Full Name</th>\r\n              <th>Gender</th>\r\n              <th>Email Address</th>\r\n              <th>Phone Number</th>\r\n              <th>COP Status</th>\r\n              <th>PENSA Status</th>\r\n              <th>Eductation Level</th>\r\n              <th>Institution</th>\r\n              <th>Expectation</th>\r\n              <th>Date Registered</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {currentPosts &&\r\n            currentPosts.map((e) => (\r\n              <tbody key={e.id}>\r\n                <tr>\r\n                  <td>\r\n                    <b>{i++}</b>\r\n                  </td>\r\n                  <td>{e.name}</td>\r\n                  <td>{e.gender}</td>\r\n                  <td>{e.email}</td>\r\n                  <td>{e.phone}</td>\r\n                  <td>{e.member}</td>\r\n                  <td>{e.pensa}</td>\r\n                  <td>{e.status}</td>\r\n                  <td>{e.institution}</td>\r\n                  <td>{e.expectation}</td>\r\n                  <td>{e.dateRegistered}</td>\r\n                </tr>\r\n              </tbody>\r\n            ))}\r\n        </table>\r\n\r\n        <Pagination\r\n          postsPerPage={this.state.postsPerPage}\r\n          totalPosts={member ? member.length : 0}\r\n          paginate={paginate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    member: state.firestore.ordered.member,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { signOut }),\r\n  firestoreConnect([\r\n    { collection: \"member\", orderBy: [\"dateRegistered\", \"asc\"] },\r\n  ])\r\n)(ViewParticipants);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Authenticate from \"../Pages/Auth\";\r\nimport Instructions from \"../Pages/Instructions\";\r\nimport Register from \"../Pages/Register\";\r\nimport viewParticipants from \"../Pages/viewParticipants\";\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Instructions} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/participant\" component={viewParticipants} />\r\n        <Route path=\"/login\" component={Authenticate} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\n// Replace this with your own config details\r\nvar config = {\r\n    apiKey: \"AIzaSyC7z5fQvojG_HHBgBnGCH7C1X2VX_EmYTM\",\r\n    authDomain: \"eschaumat.firebaseapp.com\",\r\n    databaseURL: \"https://eschaumat.firebaseio.com\",\r\n    projectId: \"eschaumat\",\r\n    storageBucket: \"eschaumat.appspot.com\",\r\n    messagingSenderId: \"950118494919\",\r\n    appId: \"1:950118494919:web:3d17bc52a7b6a3e49d04e2\",\r\n    measurementId: \"G-Z10MB2D7NF\",\r\n};\r\nfirebase.initializeApp(config);\r\n// const storage = firebase.storage();\r\nfirebase.firestore().settings({});\r\n\r\nexport { firebase as default };","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport RiseLoader from \"react-spinners/RiseLoader\";\r\n// import Metadata from \"../../Pages/MetaData/Metadata\";\r\n\r\nclass Loading extends Component {\r\n  state = {\r\n    redirect: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.id = setTimeout(() => this.setState({ redirect: true }), 3000);\r\n    // ReactGA.initialize(\"UA-154721739-1\");\r\n    // ReactGA.pageview(\"Loading Screen\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.id);\r\n  }\r\n\r\n  render() {\r\n    return this.state.redirect ? (\r\n      <Redirect to=\"/\" />\r\n    ) : (\r\n      <div>\r\n        {\" \"}\r\n        {/* <Metadata title=\"PENSA - UMaT\" /> */}\r\n        <div className=\"Loading-header\">\r\n          <RiseLoader margin={1} size={30} color={\"#fff\"} loading={true} />{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n///\r\nexport default Loading;\r\n","const initState = {\r\n    authError: null,\r\n    success: false,\r\n    loaded: false,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            // console.log(\"login error\");\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\",\r\n            };\r\n\r\n        case \"LOGIN_SUCCESS\":\r\n            // console.log(\"login success\");\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n\r\n        case \"SIGNOUT_SUCCESS\":\r\n            // console.log(\"signout success\");\r\n            return state;\r\n\r\n        case \"SIGNUP_SUCCESS\":\r\n            // console.log(\"signup success\");\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                success: true,\r\n                loaded: false,\r\n            };\r\n\r\n        case \"SIGNUP_ERROR\":\r\n            // console.log(\"signup error\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n                success: false,\r\n                loaded: true,\r\n            };\r\n\r\n        case \"EC_SIGNUP_SUCCESS\":\r\n            // console.log(\"signup success\");\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n\r\n        case \"EC_SIGNUP_ERROR\":\r\n            //console.log(\"signup error\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport Routes from \"./Routes/routes\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { isLoaded } from \"react-redux-firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./Config/fbConfig\";\r\nimport Loading from \"./Component/Loading/index\";\r\nimport rootReducer from \"./Store/Reducers\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true,\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig)\r\n  )\r\n);\r\n// eslint-disable-next-line\r\nfunction AuthIsLoaded({ children }) {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  if (!isLoaded(auth)) return <Loading />;\r\n  return children;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider\r\n        firebase={firebase}\r\n        config={rrfConfig}\r\n        dispatch={store.dispatch}\r\n        createFirestoreInstance={createFirestoreInstance}\r\n      >\r\n        {\" \"}\r\n        <BrowserRouter>\r\n          <AuthIsLoaded>\r\n            <Routes />\r\n          </AuthIsLoaded>\r\n        </BrowserRouter>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.js\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import \"mdbreact/dist/css/mdb.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}