{"version":3,"sources":["assets/IMG-20201007-WA0008.jpg","Store/Actions/authActions.js","Component/Constant.jsx","Pages/Register.jsx","Routes/routes.jsx","Config/fbConfig.js","Component/Loading/index.js","Store/Reducers/authReducer.js","Store/Reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","register","newUser","dispatch","getState","getFirebase","getFirestore","firebase","firestore","auth","createUserWithEmailAndPassword","email","password","then","memb","collection","doc","user","uid","set","name","member","gender","status","phone","institution","expectation","templateParams","from_name","to_name","to_email","reply_to","subject","message_html","emailjs","result","console","log","text","error","sendEmail","type","catch","err","TextField","style","id","className","label","placeholder","onChange","value","required","errors","errorstatus","htmlFor","marginTop","color","SelectField","data","map","e","key","Register","props","handleClose","setState","show","resetForm","handleShow","_loading","handleChange","target","checked","state","Object","assign","handleSubmit","preventDefault","isValid","trim","network","momo","loading","document","getElementById","hidden","setTimeout","keys","length","authError","isvalid","registered","loading_","this","modal","margin","size","onSubmit","global","width","Modal","aria-labelledby","onHide","centered","Body","Image","src","Button","variant","onClick","Component","connect","creds","Routes","path","component","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","Loading","redirect","clearTimeout","to","initState","authReducer","action","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","rrfConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","AuthIsLoaded","children","useSelector","isLoaded","App","config","createFirestoreInstance","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.158391ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG-20201007-WA0008.6c2f8c47.jpg\";","import * as emailjs from \"emailjs-com\";\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"LOGIN_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            });\r\n    };\r\n};\r\nconst sendEmail = (member) => {\r\n    let templateParams = {\r\n        from_name: \"noReply@pensaumat\",\r\n        to_name: member.name,\r\n        to_email: member.email,\r\n        reply_to: \"testing@gmail.com\",\r\n        subject: \"subject\",\r\n        message_html: \"message\",\r\n    };\r\n    emailjs\r\n        .send(\r\n            \"gmail\",\r\n            \"template_qYHocBcQ\",\r\n            templateParams,\r\n            \"user_qBb9Yd4R48fB4y4xPD7t1\"\r\n        )\r\n        .then(\r\n            (result) => {\r\n                console.log(result.text);\r\n            },\r\n            (error) => {\r\n                console.log(error.text);\r\n            }\r\n        );\r\n};\r\n\r\nexport const register = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase\r\n            .auth()\r\n\r\n        .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((memb) => {\r\n                return firestore.collection(\"member\").doc(memb.user.uid).set({\r\n                    name: newUser.name,\r\n                    member: newUser.member,\r\n                    gender: newUser.gender,\r\n                    status: newUser.status,\r\n                    phone: newUser.phone,\r\n                    email: newUser.email,\r\n                    institution: newUser.institution,\r\n                    expectation: newUser.expectation,\r\n                });\r\n            })\r\n            .then(() => sendEmail(newUser))\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\n// export const signUpEC = (newUser) => {\r\n//     return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n//         const firebase = getFirebase();\r\n//         const firestore = getFirestore();\r\n\r\n//         firebase\r\n//             .auth()\r\n//             .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n\r\n//         .then((resp) => {\r\n//                 return firestore.collection(\"ec\").doc(resp.user.uid).set({\r\n//                     firstName: newUser.firstname,\r\n//                     lastName: newUser.lastname,\r\n//                     status: newUser.status,\r\n//                     image: newUser.url,\r\n//                 });\r\n//             })\r\n//             .then(() => {\r\n//                 dispatch({ type: \"EC_SIGNUP_SUCCESS\" });\r\n//             })\r\n//             .catch((err) => {\r\n//                 dispatch({ type: \"EC_SIGNUP_ERROR\", err });\r\n//             });\r\n//     };\r\n// };","import React from \"react\";\r\n\r\nexport const TextField = ({\r\n  name,\r\n  style,\r\n  id,\r\n  className,\r\n  label,\r\n  placeholder,\r\n  onChange,\r\n  value,\r\n  required,\r\n  type,\r\n  errorstatus,\r\n  errors,\r\n}) => (\r\n  <div>\r\n    <label htmlFor={name} style={{ marginTop: \"10px\" }}>\r\n      <b>\r\n        {label}\r\n        {required ? <sup style={{ color: \"red\" }}>*</sup> : \"\"}\r\n      </b>\r\n    </label>\r\n    <input\r\n      type={type ? type : \"text\"}\r\n      name={name}\r\n      id={id}\r\n      placeholder={placeholder}\r\n      className={`form-control ${className}`}\r\n      style={style}\r\n      onChange={onChange}\r\n      value={value}\r\n      // required={required}\r\n    />\r\n    {!{ errorstatus } ? (\r\n      <span></span>\r\n    ) : (\r\n      <span style={{ color: \"red\" }}>{errors}</span>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport const SelectField = ({\r\n  name,\r\n  style,\r\n  id,\r\n  className,\r\n  label,\r\n  placeholder,\r\n  onChange,\r\n  value,\r\n  data,\r\n  required,\r\n  errorstatus,\r\n  errors,\r\n}) => (\r\n  <div>\r\n    <label htmlFor={name} style={{ marginTop: \"10px\" }}>\r\n      <b>\r\n        {label}\r\n        {required ? <sup style={{ color: \"red\" }}>*</sup> : \"\"}\r\n      </b>\r\n    </label>\r\n    <select\r\n      name={name}\r\n      id={id}\r\n      className={`form-control ${className}`}\r\n      value={value}\r\n      style={style}\r\n      onChange={onChange}\r\n      // required={required}\r\n    >\r\n      {data ? (\r\n        data && data.map((e) => <option key={e}>{e}</option>)\r\n      ) : (\r\n        <>\r\n          <option>Select Gender</option>\r\n          <option>Male</option>\r\n          <option>Female</option>\r\n        </>\r\n      )}\r\n    </select>\r\n    {!{ errorstatus } ? (\r\n      <span></span>\r\n    ) : (\r\n      <span style={{ color: \"red\" }}>{errors}</span>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport const ErrorHandling = ({ errors, errorstatus }) => {\r\n  return !{ errorstatus } ? (\r\n    <span></span>\r\n  ) : (\r\n    <span style={{ color: \"red\" }}>{errors}</span>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { register } from \"../Store/Actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextField, SelectField } from \"../Component/Constant\";\r\nimport img from \"../assets/IMG-20201007-WA0008.jpg\";\r\nimport \"./index.css\";\r\nimport RiseLoader from \"react-spinners/CircleLoader\";\r\nimport { Button, Modal, Image } from \"react-bootstrap\";\r\n/**\r\n * name\r\n * school\r\n * member or not\r\n * pre-tertiary,tertiary or alumni\r\n * email\r\n * active whatsApp\r\n * gender\r\n *\r\n * expectation\r\n */\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      gender: \"\",\r\n      status: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      member: \"\",\r\n      institution: \"\",\r\n      password: \"123456789\",\r\n      expectation: \"\",\r\n      momo: \"\",\r\n      network: \"\",\r\n      errors: {},\r\n      error: true,\r\n      loading: false,\r\n      isvalid: false,\r\n      registered: false,\r\n      show: false,\r\n      loading_: false,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    this.setState({ name: \"\" });\r\n    this.resetForm();\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true, _loading: false });\r\n  };\r\n  resetForm() {\r\n    this.setState({\r\n      email: \"\",\r\n\r\n      modal: false,\r\n    });\r\n  }\r\n  handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    if (!!this.state.errors[target.name]) {\r\n      let errors = Object.assign({}, this.state.errors);\r\n      delete errors[target.name];\r\n      this.setState({\r\n        [name]: value,\r\n        errors,\r\n      });\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let errors = {};\r\n    // Validating\r\n    if (this.state.name.trim() === \"\") {\r\n      errors.name = \"Full name is required\";\r\n    }\r\n    if (\r\n      (this.state.gender.trim() === \"Select Gender\") |\r\n      (this.state.gender.trim() === \"\")\r\n    ) {\r\n      errors.gender = \"Select Gender\";\r\n    }\r\n    if (\r\n      (this.state.status.trim() === \"Select Status\") |\r\n      (this.state.status.trim() === \"\")\r\n    ) {\r\n      errors.status = \"Select Status\";\r\n    }\r\n    if (\r\n      (this.state.network.trim() === \"Select Network\") |\r\n      (this.state.network.trim() === \"\")\r\n    ) {\r\n      errors.network = \"Select Network Type\";\r\n    }\r\n\r\n    if (\r\n      (this.state.member.trim() === \"Select Status\") |\r\n      (this.state.member.trim() === \"\")\r\n    ) {\r\n      errors.member = \"Select COP Status\";\r\n    }\r\n\r\n    if (this.state.email.trim() === \"\") {\r\n      errors.email = \"Enter Email\";\r\n    }\r\n    if (this.state.momo.trim() === \"\") {\r\n      errors.momo = \"Enter your mobile money number\";\r\n    }\r\n    if (this.state.expectation.trim() === \"\") {\r\n      errors.expectation = \"Enter your expectation for the conference\";\r\n    }\r\n\r\n    // Before Loading\r\n    let isValid;\r\n    this.setState({ loading: true });\r\n\r\n    // After Loading\r\n    document.getElementById(\"spinning\").hidden = false;\r\n    document.getElementById(\"form\").hidden = true;\r\n\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n      if (!this.state.loading) {\r\n        this.setState({ errors });\r\n        isValid = Object.keys(errors).length === 0;\r\n        document.getElementById(\"spinning\").hidden = true;\r\n        document.getElementById(\"form\").hidden = false;\r\n        if (isValid) {\r\n          this.props.register(this.state);\r\n          if (!this.props.authError) {\r\n            this.handleShow();\r\n          }\r\n        }\r\n      }\r\n    }, 5000);\r\n  };\r\n  render() {\r\n    const { authError } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {/* <span\r\n          className=\"spinner text-danger mx-auto text-center\"\r\n          //   role=\"status\"\r\n          id=\"spinning\"\r\n          hidden\r\n          style={{ marginTop: \"250px\" }}\r\n        >\r\n          <RiseLoader margin={1} size={50} color={\"#fff\"} loading={true} />\r\n        </span> */}\r\n        {/* {this.state.registered ?  : \"\"} */}\r\n        <div className=\"Loading-header\" id=\"spinning\" hidden>\r\n          <RiseLoader margin={1} size={100} color={\"#fff\"} loading={true} />{\" \"}\r\n        </div>{\" \"}\r\n        <div className=\"my-container\">\r\n          <form onSubmit={this.handleSubmit} className=\"form-group\" id=\"form\">\r\n            {!!this.state.errors.global && (\r\n              <div className=\"ui negative message\">\r\n                <p>{this.state.errors.global}</p>\r\n              </div>\r\n            )}\r\n\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"name\"\r\n              label=\"Full Name\"\r\n              className=\"form-control\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.name}\r\n            />\r\n            {/* <TextField\r\n              type=\"text\"\r\n              name=\"othername\"\r\n              label=\"Othername\"\r\n              className=\"form-control\"\r\n              value={this.state.othername}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              label=\"Lastname\"\r\n              className=\"form-control\"\r\n              value={this.state.lastname}\r\n              onChange={this.handleChange}\r\n              required\r\n            /> */}\r\n            <SelectField\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n              required\r\n              value={this.state.gender}\r\n              onChange={this.handleChange}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.gender}\r\n            />\r\n            <SelectField\r\n              label=\"Are you a COP member\"\r\n              name=\"member\"\r\n              required\r\n              value={this.state.member}\r\n              onChange={this.handleChange}\r\n              data={[\"Select Status\", \"Member\", \"Not Member\"]}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.member}\r\n            />\r\n            <SelectField\r\n              label=\"PENSA Membership Status\"\r\n              name=\"status\"\r\n              required\r\n              value={this.state.status}\r\n              onChange={this.handleChange}\r\n              data={[\r\n                \"Select Status\",\r\n                \"Pre-Tertiary\",\r\n                \"Tertiary\",\r\n                \"Alumni\",\r\n                \"non-PENSA\",\r\n              ]}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.status}\r\n            />\r\n            <TextField\r\n              type=\"textarea\"\r\n              name=\"expectation\"\r\n              label=\"What is your expectation after the conference\"\r\n              className=\"form-control\"\r\n              value={this.state.expectation}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.expectation}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              className=\"form-control\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.email}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"momo\"\r\n              label=\"Mobile Money Number\"\r\n              className=\"form-control\"\r\n              value={this.state.momo}\r\n              onChange={this.handleChange}\r\n              required\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.momo}\r\n            />\r\n            <SelectField\r\n              label=\"Telecom Network\"\r\n              name=\"network\"\r\n              required\r\n              value={this.state.network}\r\n              onChange={this.handleChange}\r\n              data={[\"Select Telecom\", \"MTN\", \"Airtel/Tigo\", \"Vodafone\"]}\r\n              errorstatus={this.state.error}\r\n              errors={this.state.errors.network}\r\n            />\r\n            <div\r\n              style={{ marginTop: \"20px\", width: \"50%\" }}\r\n              className=\"container\"\r\n            >\r\n              <button type=\"submit\" className=\"btn btn-success form-control\">\r\n                Register\r\n              </button>\r\n            </div>\r\n            <div className=\"text-center btn-danger\">\r\n              {authError && !this.state.loading ? <p>{authError}</p> : null}\r\n            </div>\r\n\r\n            <Modal\r\n              size=\"md\"\r\n              aria-labelledby=\"contained-modal-title-vcenter\"\r\n              show={this.state.show}\r\n              onHide={this.handleClose}\r\n              centered\r\n            >\r\n              <Modal.Body className=\"contact_success_modal_body\">\r\n                <Image\r\n                  className=\"contact_success_modal_img\"\r\n                  src=\"https://icon-library.net/images/success-icon/success-icon-5.jpg\"\r\n                />\r\n                <h5>\r\n                  Thank you{\" \"}\r\n                  <span>\r\n                    <strong>{this.state.name}</strong>!!\r\n                  </span>{\" \"}\r\n                  😇\r\n                </h5>\r\n                <h6>\r\n                  You have successfuly registered for the second edition of the\r\n                  Eschatological conference\r\n                </h6>\r\n                <h6>\r\n                  Check your email for the links to access the conference.\r\n                </h6>\r\n                <br />\r\n                <Button\r\n                  variant=\"outline-light\"\r\n                  size=\"lg\"\r\n                  onClick={this.handleClose}\r\n                  className=\"contact-email-text-btn\"\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </form>\r\n        </div>\r\n        {/* <img src={img} alt=\"bg\" /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    register: (creds) => dispatch(register(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Register from \"../Pages/Register\";\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" component={Register} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\n// Replace this with your own config details\r\nvar config = {\r\n    apiKey: \"AIzaSyC7z5fQvojG_HHBgBnGCH7C1X2VX_EmYTM\",\r\n    authDomain: \"eschaumat.firebaseapp.com\",\r\n    databaseURL: \"https://eschaumat.firebaseio.com\",\r\n    projectId: \"eschaumat\",\r\n    storageBucket: \"eschaumat.appspot.com\",\r\n    messagingSenderId: \"950118494919\",\r\n    appId: \"1:950118494919:web:3d17bc52a7b6a3e49d04e2\",\r\n    measurementId: \"G-Z10MB2D7NF\",\r\n};\r\nfirebase.initializeApp(config);\r\n// const storage = firebase.storage();\r\nfirebase.firestore().settings({});\r\n\r\nexport { firebase as default };","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport RiseLoader from \"react-spinners/RiseLoader\";\r\n// import Metadata from \"../../Pages/MetaData/Metadata\";\r\n\r\nclass Loading extends Component {\r\n  state = {\r\n    redirect: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.id = setTimeout(() => this.setState({ redirect: true }), 3000);\r\n    // ReactGA.initialize(\"UA-154721739-1\");\r\n    // ReactGA.pageview(\"Loading Screen\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.id);\r\n  }\r\n\r\n  render() {\r\n    return this.state.redirect ? (\r\n      <Redirect to=\"/\" />\r\n    ) : (\r\n      <div>\r\n        {\" \"}\r\n        {/* <Metadata title=\"PENSA - UMaT\" /> */}\r\n        <div className=\"Loading-header\">\r\n          <RiseLoader margin={1} size={30} color={\"#fff\"} loading={true} />{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n///\r\nexport default Loading;\r\n","const initState = {\r\n    authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            // console.log(\"login error\");\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\",\r\n            };\r\n\r\n        case \"LOGIN_SUCCESS\":\r\n            // console.log(\"login success\");\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n\r\n        case \"SIGNOUT_SUCCESS\":\r\n            // console.log(\"signout success\");\r\n            return state;\r\n\r\n        case \"SIGNUP_SUCCESS\":\r\n            // console.log(\"signup success\");\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n\r\n        case \"SIGNUP_ERROR\":\r\n            // console.log(\"signup error\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n\r\n        case \"EC_SIGNUP_SUCCESS\":\r\n            // console.log(\"signup success\");\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n\r\n        case \"EC_SIGNUP_ERROR\":\r\n            //console.log(\"signup error\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport Routes from \"./Routes/routes\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { isLoaded } from \"react-redux-firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./Config/fbConfig\";\r\nimport Loading from \"./Component/Loading/index\";\r\nimport rootReducer from \"./Store/Reducers\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true,\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig)\r\n  )\r\n);\r\n// eslint-disable-next-line\r\nfunction AuthIsLoaded({ children }) {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  if (!isLoaded(auth)) return <Loading />;\r\n  return children;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider\r\n        firebase={firebase}\r\n        config={rrfConfig}\r\n        dispatch={store.dispatch}\r\n        createFirestoreInstance={createFirestoreInstance}\r\n      >\r\n        {\" \"}\r\n        <BrowserRouter>\r\n          <AuthIsLoaded>\r\n            <Routes />\r\n          </AuthIsLoaded>\r\n        </BrowserRouter>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.js\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import \"mdbreact/dist/css/mdb.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}